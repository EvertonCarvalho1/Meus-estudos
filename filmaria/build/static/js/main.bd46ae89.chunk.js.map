{"version":3,"sources":["components/Header/index.js","services/api.js","pages/Home/index.js","pages/Filme/index.js","pages/Favoritos/index.js","pages/Erro/index.js","routes.js","App.js","index.js"],"names":["Header","className","to","api","axios","create","baseURL","App","useState","filmes","setFilmes","useEffect","a","get","response","data","loadFilmes","map","filme","nome","src","foto","alt","id","Filme","useParams","history","useHistory","setFilme","loading","setLoading","length","replace","loadFilme","console","log","sinopse","onClick","minhaLista","localStorage","getItem","filmesSalvos","JSON","parse","some","filmeSalvo","toast","info","push","setItem","stringify","success","target","href","Favoritos","favoritos","setFavoritos","favorito","filtroFilmes","filter","handleDelete","Erro","Routes","exact","path","component","Home","autoClose","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd46ae89.chunk.js","sourcesContent":["import './header.css'\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nexport default function Header() {\r\n    return(\r\n        <header>\r\n            <Link \r\n            className='logo' to='/'>Filmaria\r\n            </Link>\r\n            \r\n            <Link \r\n            className='favoritos' to='/favoritos'>Favoritos</Link>\r\n        </header>\r\n    );\r\n};","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'https://sujeitoprogramador.com'\r\n});\r\n\r\nexport default api;","import React, {useEffect, useState, useCallback}from 'react';\r\nimport './home.css';\r\nimport api from '../../services/api';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction App() {\r\n\r\n  const [filmes, setFilmes] = useState([]);\r\n  //o state filmes começa com uma array vazio e quando, fizermos uma requisição para nosssa api, ele vai jogar o conteuto do get dentro do array do state filmes\r\n\r\n\r\n  useEffect(() => {\r\n\r\n\r\n    async function loadFilmes(){\r\n    //esta função será responsavel por ir na api e realizar um GET nos filmes, e isso demora um pouquinho e isso demora um pouquinho, logo ela é Assincrona, pq a função precisa buscar da internet, por isso utilizamos o Async - Await, utilzamos o Await pra esperar a que a requisição chegue\r\n      const response = await api.get('/r-api/?api=filmes');\r\n      \r\n\r\n      setFilmes(response.data);\r\n    //passamos o response.data para o setFilmes, logo ela ira jogar todo esse conteudo dentro da state filmes\r\n    };\r\n\r\n    loadFilmes();\r\n   //função estanciada, essa função vai fazer a requisição na api \r\n\r\n  }, []);\r\n  //Ciclo de vida, substitui o component DidMount, quando o array está vazio, quando o cara entrar no site, o useEffect vai executar o que tem detro da função\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    <div className='container'>\r\n\r\n      <div className='lista-filmes'>\r\n\r\n        {filmes.map((filme) =>{ \r\n\r\n          return (\r\n            <article key={filme.id}>\r\n              <strong>{filme.nome}</strong>\r\n              <img src={filme.foto} alt={filme.nome} />\r\n              <Link to={`/filmes/${filme.id}`}>Acessar</Link>\r\n            </article>\r\n          )\r\n\r\n\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {useEffect, useState} from 'react'\r\nimport './filme.css';\r\nimport {useParams, useHistory} from 'react-router-dom';\r\n//useParams é utilizado para buscar o parametro passado na url, o id passado na url\r\n//useHistory é utilizado para fazer um controle de navegação\r\nimport api from '../../services/api';\r\nimport {toast} from 'react-toastify'\r\n\r\n\r\n\r\nexport default function Filme () {\r\n    const { id } = useParams();\r\n    //instanciamos o useParams dessa forma, desestruturando e pegando apenas o id dos parametros \r\n    const history = useHistory();\r\n    //instanciamos o useHistory aqui\r\n\r\n\r\n    const [filme, setFilme] = useState([]); \r\n    const [loading, setLoading] = useState(true);\r\n    //state de loading serve pra deixar a pagina em carragamento até terminar a requisição para api, terminou a requisição, finalizamos o loading --> fazendo isso, podemos utilizar a renderização condicional, usando if e else no JSX abaixo\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        async function loadFilme () {\r\n\r\n            const response = await api.get(`r-api/?api=filmes/${id}`);\r\n\r\n            if(response.data.length === 0){\r\n                //verificação e diz se o usuário tentou utilizar um id errado nos parametros, logo a api vai retornar uma array vazio, a verificação utiliza o lenght pra ver se há algo dentro do array, e se não tiver nada, vamos navegar o usuário para a home\r\n                history.replace('/');\r\n                //navegamos o usuario até a home com o history.replace()\r\n                return;\r\n            }\r\n\r\n           \r\n            setFilme(response.data);\r\n            setLoading(false);\r\n            //finalizamos o loading atualizando a state loading para false\r\n           \r\n        };\r\n\r\n        loadFilme();\r\n\r\n        return () => {\r\n        console.log('COMPONENTE DESMONTADO')\r\n        }\r\n\r\n    }, [history, id]);\r\n\r\n    function salvarFilme () {\r\n\r\n        const minhaLista = localStorage.getItem('filmes');\r\n\r\n        let filmesSalvos = JSON.parse(minhaLista) || [];\r\n        //hackzinho => caso tenha algo no localstorage, ele vai armazenar dentro da variavel filmesSalvos, caso não tenha \"ou ||\" ele vai trazer apenas um array vazio para a variavel não ficar vazia\r\n\r\n        //Verificação => se tiver um filme salvo com esse mesmo ID, precisamos ignorar\r\n        const hasFilme = filmesSalvos.some((filmeSalvo) =>  filmeSalvo.id === filme.id);\r\n        //.some -> funcção do javascript que percorre todo o array de filmesSalvos e vai verificar se pelo menos algum item é igual ao parametro que a gente passar --> se for der tudo certo, o .some devolve um boolean pra gente, true ou false\r\n\r\n        if (hasFilme){\r\n        \r\n            toast.info('Você já possui esse filme salvo.')\r\n            return;\r\n            //demos um return aqui pra a execução do código parar\r\n        };\r\n\r\n        filmesSalvos.push(filme);\r\n        localStorage.setItem('filmes', JSON.stringify(filmesSalvos));\r\n        toast.success('Filme salvo com sucesso')\r\n\r\n\r\n    };\r\n\r\n    \r\n    if(loading){\r\n        return(\r\n            <div className='filme-info'>\r\n                <h1>Carregando seu filme...</h1>\r\n            </div>\r\n        )\r\n    }else{\r\n\r\n        return (\r\n            <div className='filme-info'>\r\n        \r\n                    <h1>{filme.nome}</h1>\r\n                    <img src={filme.foto} alt={filme.nome} />\r\n                    <h3>Sinopse</h3>\r\n                    {filme.sinopse}\r\n\r\n                    <div>\r\n\r\n\r\n                        <button onClick={salvarFilme}>Salvar</button>\r\n\r\n\r\n                        <a target='blank' href={`https://www.youtube.com/results?search_query=${filme.nome} Trailer`}>Trailer</a>\r\n                       \r\n                    </div>\r\n                \r\n            </div>\r\n        )\r\n\r\n    };\r\n    \r\n};","import {useEffect, useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './favoritos.css';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\n\r\nexport default function Favoritos() {\r\n\r\n    const [favoritos, setFavoritos] = useState([]);\r\n\r\n \r\n    useEffect(() => {\r\n\r\n        const minhaLista = localStorage.getItem('filmes');\r\n        //pegando os filmes do localStorage \r\n    \r\n\r\n        setFavoritos(JSON.parse(minhaLista) || []);\r\n\r\n    }, []);\r\n\r\n    function handleDelete (id) {\r\n\r\n        let filtroFilmes = favoritos.filter((favorito) => {\r\n            return (favorito.id !== id)\r\n            //o .filter vai percorrer o array de favoritos e vai jogar dentro de favorito\r\n            //depois vamos retornar dentro da variavel filtroFilmes, todos aqueles filmes \r\n            //diferentes do id clicado.\r\n        });\r\n\r\n        setFavoritos(filtroFilmes);\r\n\r\n        localStorage.setItem('filmes', JSON.stringify(filtroFilmes));\r\n        toast.success('Filme excluído com sucesso');\r\n  \r\n        \r\n    };\r\n\r\n\r\n    \r\n    return(\r\n        <div className='pagina-favoritos'>\r\n            \r\n            <h1>Meus Filmes</h1>\r\n\r\n            {favoritos.length === 0 && <span>Você não possui nenhum filme salvo 😢 </span>}\r\n\r\n\r\n\r\n            <ul>\r\n               {favoritos.map((favorito) => {\r\n                   return(\r\n                       <li key={favorito.id}>\r\n                           <span>{favorito.nome}</span>\r\n\r\n                           <div>\r\n                            <Link to={`/filmes/${favorito.id}`}>Ver detalhes</Link>\r\n                            <button onClick={() => handleDelete(favorito.id)}>Excluir</button>\r\n                            {/* a função handleDelete, ira enviar o id do map favorito, para q esse id possa ser usado\r\n                            no metodo filter\r\n                            passando uma função anonima dentro do onClick, o handleDelente não será executado, ela só sera executada\r\n                            quando houver o click */}\r\n                           </div>\r\n                           \r\n                        </li>\r\n                   )\r\n               })} \r\n            </ul>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\n\r\n\r\n\r\n","import './erro.css'\r\nimport React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function Erro () {\r\n    return(\r\n        <div className='erro-container'>\r\n\r\n            <h1>Pagina não encontrada 😢</h1>\r\n\r\n                <span>\r\n                    Você pode estar procurando um dos itens abaixo:\r\n                </span>\r\n\r\n                <Link to='/'>Home - Filmaria</Link>\r\n                <Link to='/favoritos'>Favoritos</Link>\r\n\r\n           \r\n        </div>\r\n    )\r\n\r\n}","import {BrowserRouter, Route, Switch} from 'react-router-dom';\r\nimport Header from './components/Header';\r\nimport Home from './pages/Home';\r\nimport Filme from './pages/Filme';\r\nimport Favoritos from './pages/Favoritos';\r\nimport Erro from './pages/Erro'\r\n\r\n\r\n\r\n\r\nconst Routes = () => {\r\n   return(\r\n       <BrowserRouter>\r\n            <Header/>\r\n            <Switch>\r\n                  <Route exact path='/' component={Home}/>  \r\n                  <Route exact path='/filmes/:id' component={Filme}/> \r\n                  <Route exact path='/favoritos' component={Favoritos}/> \r\n\r\n                  <Route path='*' component={Erro}/>\r\n            </Switch>\r\n       </BrowserRouter>\r\n   )\r\n}\r\n\r\nexport default Routes;\r\n\r\n","import './style.css';\r\nimport Routes from './routes';\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport {ToastContainer} from 'react-toastify'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='app' >\r\n      <Routes/>\r\n      <ToastContainer autoClose={3000}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}